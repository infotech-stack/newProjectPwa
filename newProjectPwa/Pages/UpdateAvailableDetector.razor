@inject IJSRuntime _jsRuntime
@inject NavigationManager uriHelper

@if (_newVersionAvailable)
{
    <button type="button" class="btn btn-danger shadow floating-update-button" onclick="window.location.reload()">
        A new version of the application is available. Click here to upgrade.
    </button>
}
<style>
    .floating-update-button {
        position: relative;
        top: 0;
        padding: 1rem 1.5rem;
        width: 100%;
    }
</style>

@code {
    private bool _newVersionAvailable = false;

    protected override async Task OnInitializedAsync()
    {
        await RegisterForUpdateAvailableNotification();
    }

    private async Task RegisterForUpdateAvailableNotification()
    {
        await _jsRuntime.InvokeAsync<object>(
            identifier: "registerForUpdateAvailableNotification",
            DotNetObjectReference.Create(this),
            nameof(OnUpdateAvailable));
    }

    [JSInvokable(nameof(OnUpdateAvailable))]
    public Task OnUpdateAvailable()
    {
        _newVersionAvailable = true;

        StateHasChanged();

        return Task.CompletedTask;
    }
}